{"version":3,"sources":["components/filter.js","components/form.js","components/persons.js","components/notification.js","services/phoneservice.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","deleteperson","map","person","name","number","onClick","id","Notification","notification","className","message","baseUrl","App","useState","setPersons","setNewName","setNewNumber","Filtername","setFiltername","setnotification","useEffect","axios","get","then","response","data","Notificate","setTimeout","filternames","length","filter","p","toLowerCase","indexOf","event","target","preventDefault","newObject","exist","find","element","nameObject","window","confirm","put","updatedPerson","catch","post","create","concat","delete","DeletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71b59ad9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return <input value={props.value} onChange={props.onChange} />;\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addName}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n        number:{\" \"}\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, deleteperson }) => {\r\n  return (\r\n    <>\r\n      {persons.map((person) => (\r\n        <li key={person.id}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => deleteperson(person.id)}>delete</button>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\nimport \"../index.css\";\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"https://fullstackopen-2021.herokuapp.com/api/persons\";\r\n\r\nexport const getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nexport const create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nexport const update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\nexport const DeletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/filter\";\nimport PersonForm from \"./components/form\";\nimport Persons from \"./components/persons\";\nimport \"./index.css\";\nimport Notification from \"./components/notification\";\nimport { create, DeletePerson, getAll, update } from \"./services/phoneservice\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [Filtername, setFiltername] = useState(\"\");\n  const [notification, setnotification] = useState(null);\n  useEffect(() => {\n    getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handlefilterChange = (event) => {\n    let value = event.target.value;\n    setFiltername(value.toLowerCase());\n  };\n  const Notificate = (message, type = \"success\") => {\n    setnotification({ message, type });\n    setTimeout(() => {\n      setnotification(null);\n    }, 5000);\n  };\n  const addName = (event) => {\n    event.preventDefault();\n    const exist = persons.find(\n      (element) => element.name.toLowerCase() === newName.toLowerCase()\n    );\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    };\n    if (exist) {\n      const ok = window.confirm(\n        `The name ${newName} is alredy registered want to update?`\n      );\n      if (ok) {\n        update(exist.id, nameObject)\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== exist.id ? person : updatedPerson.data\n              )\n            );\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch(() => {\n            Notificate(`${exist.name} has already been eliminated`, \"error\");\n          });\n      }\n    } else {\n      create(nameObject).then((response) => {\n        setPersons(persons.concat(response.data));\n        Notificate(`${newName} created`, \"success\");\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  const deletePerson = (id) => {\n    let person = persons.find((element) => element.id === id);\n    let ok = window.confirm(`Delete ${person.name}?`);\n    if (ok) {\n      DeletePerson(person.id)\n        .then((response) => {\n          // console.log(response)\n          setPersons(persons.filter((person) => person.id !== id));\n          Notificate(`${person.name} eliminated`);\n        })\n        .catch(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n          Notificate(`${person.name} has already been eliminated`, \"error\");\n        });\n    }\n  };\n\n  const filternames =\n    Filtername.length === 0\n      ? persons\n      : persons.filter(\n          (p) => p.name.toLowerCase().indexOf(Filtername.toLowerCase()) > -1\n        );\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      filter shown wiht a :\n      <Filter value={Filtername} onChange={handlefilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        <Persons persons={filternames} deleteperson={deletePerson} />\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}